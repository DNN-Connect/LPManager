<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cmdUpdate.Text" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="cmdCancel.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="cmdDelete.Text" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="plAllowDirectDownload.Text" xml:space="preserve">
    <value>Allow Direct Download</value>
  </data>
  <data name="plAllowDirectDownload.Help" xml:space="preserve">
    <value>If checked then the partner allows language packs to be directly downloaded from his/her site.</value>
  </data>
  <data name="plAllowRedistribute.Text" xml:space="preserve">
    <value>Allow Redistribute</value>
  </data>
  <data name="plAllowRedistribute.Help" xml:space="preserve">
    <value>If checked then information from this partner will be fed into your own stream of packs for others to integrate on their site. Select this if you trust the partner to not feed spam or bad material into your feed.</value>
  </data>
  <data name="plCubeUrl.Text" xml:space="preserve">
    <value>Cube Url</value>
  </data>
  <data name="plCubeUrl.Help" xml:space="preserve">
    <value>Url to get the data from the partner. You get this url from your partner.</value>
  </data>
  <data name="plDownloadAffiliates.Text" xml:space="preserve">
    <value>Download Affiliates</value>
  </data>
  <data name="plDownloadAffiliates.Help" xml:space="preserve">
    <value>If checked then partners of your partner will also be downloaded. This is recursive so you this also downloads partners of partners of partners, etc.</value>
  </data>
  <data name="plPackUrl.Text" xml:space="preserve">
    <value>Pack Url</value>
  </data>
  <data name="plPackUrl.Help" xml:space="preserve">
    <value>Url to download the language packs. This is communicated by the partner in the feed.</value>
  </data>
  <data name="plPartnerName.Text" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="plPartnerName.Help" xml:space="preserve">
    <value>Name of the partner. This is downloaded from their feed.</value>
  </data>
  <data name="plPartnerUrl.Text" xml:space="preserve">
    <value>Url</value>
  </data>
  <data name="plPartnerUrl.Help" xml:space="preserve">
    <value>Url to the partner's web site. This is purely for promotional reasons and is set by the partner in his/her feed.</value>
  </data>
  <data name="plPartnerUsername.Text" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="plPartnerUsername.Help" xml:space="preserve">
    <value>If the partner has a username on your website, fill it in here. In the future we may leverage this to provide more functionality.</value>
  </data>
  <data name="ControlTitle_editpartner.Text" xml:space="preserve">
    <value>Edit Partner</value>
  </data>
  <data name="cmdDownload.Text" xml:space="preserve">
    <value>Download Feed</value>
  </data>
  <data name="Delete.Confirm" xml:space="preserve">
    <value>Are you sure you wish to delete this partner? Note you will also delete associated information such as the language packs that partner has available.</value>
  </data>
  <data name="lblImportOverride.Text" xml:space="preserve">
    <value>Override import object</value>
  </data>
  <data name="plDownload.Help" xml:space="preserve">
    <value>This will start the download immediately. Select checkbox to force import of objects.</value>
  </data>
  <data name="plDownload.Text" xml:space="preserve">
    <value>Download</value>
  </data>
</root>